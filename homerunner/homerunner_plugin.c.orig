#include <glib.h>
#include <glib-object.h>
#include <totem.h>
#include <totem-plugin.h>
#include <arpa/inet.h>
#ifndef HDHOMERUN_H
#define HDHOMERUN_H
#include <hdhomerun/hdhomerun.h>
#endif
#include "tj_channel_list.h"

#define TOTEM_TYPE_HOMERUNNER_PLUGIN			(totem_homerunner_plugin_get_type ())
#define TOTEM_HOMERUNNER_PLUGIN(o)				(G_TYPE_CHECK_INSTANCE_CAST ((o), TOTEM_TYPE_HOMERUNNER_PLUGIN, TotemHomerunnerPlugin))
#define TOTEM_HOMERUNNER_PLUGIN_CLASS(k)		(G_TYPE_CHECK_CLASS_CAST((k), TOTEM_TYPE_HOMERUNNER_PLUGIN, TotemHomerunnerPluginClass))
#define TOTEM_IS_HOMERUNNER_PLUGIN(o)			(G_TYPE_CHECK_INSTANCE_TYPE ((o), TOTEM_TYPE_HOMERUNNER_PLUGIN))
#define TOTEM_IS_HOMERUNNER_PLUGIN_CLASS(k)     (G_TYPE_CHECK_CLASS_TYPE ((k), TOTEM_TYPE_HOMERUNNER_PLUGIN))
#define TOTEM_HOMERUNNER_PLUGIN_GET_CLASS(o)    (G_TYPE_INSTANCE_GET_CLASS ((o), TOTEM_TYPE_HOMERUNNER_PLUGIN, TotemHomerunnerPluginClass))

typedef struct {
	struct hdhomerun_debug_t *dbg;
} TotemHomerunnerPluginPrivate;

TOTEM_PLUGIN_REGISTER (TOTEM_TYPE_HOMERUNNER_PLUGIN, TotemHomerunnerPlugin, totem_homerunner_plugin);

static void
impl_activate (PeasActivatable *plugin)
{
	TotemHomerunnerPlugin *self = TOTEM_HOMERUNNER_PLUGIN (plugin);
	TotemHomerunnerPluginPrivate *priv = self->priv;
	TotemObject *totem;
	GtkWidget* channel_list;

	totem = g_object_get_data (G_OBJECT (plugin), "object");
	channel_list = tj_channel_list_new ();
	gtk_widget_show (channel_list);
	totem_object_add_sidebar_page (totem, "channel_list", "Channels", channel_list);
}

static void
impl_deactivate (PeasActivatable *plugin)
{
	TotemHomerunnerPlugin *self = TOTEM_HOMERUNNER_PLUGIN (plugin);
	TotemObject *totem;

	/* Destroy resources created in impl_activate() here. e.g. Disconnect from signals
	 * and remove menu entries and UI. */
	totem = g_object_get_data (G_OBJECT (plugin), "object");
	totem_object_remove_sidebar_page (totem, "channel_list");

}
